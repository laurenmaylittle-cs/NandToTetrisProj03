// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 8 bits wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[8], load, address[12];
    OUT out[8];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=out1,b=out2,c=out3,d=out4,e=out5,f=out6,g=out7,h=out8);
    
    RAM512(in[0..7]=in, load=out1, address= address[0..8], out[0..7]=ramout1);
    RAM512(in[0..7]=in, load=out2, address= address[0..8], out[0..7]=ramout2);
    RAM512(in[0..7]=in, load=out3, address= address[0..8], out[0..7]=ramout3);
    RAM512(in[0..7]=in, load=out4, address= address[0..8], out[0..7]=ramout4);
    RAM512(in[0..7]=in, load=out5, address= address[0..8], out[0..7]=ramout5);
    RAM512(in[0..7]=in, load=out6, address= address[0..8], out[0..7]=ramout6);
    RAM512(in[0..7]=in, load=out7, address= address[0..8], out[0..7]=ramout7);
    RAM512(in[0..7]=in, load=out8, address= address[0..8], out[0..7]=ramout8);
    
    Mux8Way8(a=ramout1,b=ramout2,c=ramout3,d=ramout4,e=ramout5,f=ramout6,g=ramout7,h=ramout8, sel=address[9..11], out=out);
}
